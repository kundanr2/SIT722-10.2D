apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: 10.2d-staging
  labels: { app: frontend }
spec:
  replicas: 2
  selector: { matchLabels: { app: frontend } }
  template:
    metadata: { labels: { app: frontend } }
    spec:
      containers:
      - name: frontend
        image: sit72210dacr.azurecr.io/frontend:latest
        ports: [{ containerPort: 80 }]
        envFrom:
        - configMapRef: { name: app-config }
      imagePullSecrets:
      - name: acr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: 10.2d-staging
spec:
  selector: { app: frontend }
  ports: [{ port: 80, targetPort: 80 }]
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: 10.2d-prod
  labels: { app: frontend }
spec:
  replicas: 3
  selector: { matchLabels: { app: frontend } }
  template:
    metadata: { labels: { app: frontend } }
    spec:
      containers:
      - name: frontend
        image: 10.2dacr.azurecr.io/frontend:latest
        ports: [{ containerPort: 80 }]
        envFrom:
        - configMapRef: { name: app-config }
      imagePullSecrets:
      - name: acr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: 10.2d-prod
spec:
  selector: { app: frontend }
  ports: [{ port: 80, targetPort: 80 }]
  type: LoadBalancer