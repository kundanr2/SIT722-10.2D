apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-deployment
  namespace: sit722-staging
  labels: { app: product-service }
spec:
  replicas: 2
  selector: { matchLabels: { app: product-service } }
  template:
    metadata: { labels: { app: product-service } }
    spec:
      containers:
      - name: product-service
        image: sit72210dacr.azurecr.io/product-service:latest
        ports: [{ containerPort: 8000 }]
        env:
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@product-db:5432/$(POSTGRES_DB_PRODUCT)
        envFrom:
        - configMapRef: { name: app-config }
        - secretRef:    { name: app-secrets }
      imagePullSecrets:
      - name: acr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: sit722-staging
spec:
  selector: { app: product-service }
  ports: [{ port: 80, targetPort: 8000 }]
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-deployment
  namespace: sit722-prod
  labels: { app: product-service }
spec:
  replicas: 3
  selector: { matchLabels: { app: product-service } }
  template:
    metadata: { labels: { app: product-service } }
    spec:
      containers:
      - name: product-service
        image: 10.2dacr.azurecr.io/product-service:latest
        ports: [{ containerPort: 8000 }]
        env:
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@product-db:5432/$(POSTGRES_DB_PRODUCT)
        envFrom:
        - configMapRef: { name: app-config }
        - secretRef:    { name: app-secrets }
      imagePullSecrets:
      - name: acr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: sit722-prod
spec:
  selector: { app: product-service }
  ports: [{ port: 80, targetPort: 8000 }]
  type: ClusterIP
